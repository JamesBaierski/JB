import os
from autogen import AssistantAgent, UserProxyAgent, GroupChat, GroupChatManager
from autogen.oai.client import OpenAI

# Base configuration for all agents
config_list = [{
    "model": "hermes-3-llama-3.2-3b",
    "base_url": 'http://127.0.0.1:1234/v1',
    "api_key": "lm-studio"
}]

# Create specialized agents
Agent_1 = AssistantAgent(
    name="Agent_1",
    llm_config={
        "config_list": config_list,
        "temperature": 0.7,
    },
    system_message=
    '''
    write me song lyrics

    '''

)

Agent_2 = AssistantAgent(
    name="Agent_2",
    llm_config={
        "config_list": config_list,
        "temperature": 0.7,
    },
    system_message=
    """
    pick a music genere

    """
)

Agent_3 = AssistantAgent(
    name="Agent_3",
    llm_config={
        "config_list": config_list,
        "temperature": 0.7,
    },
    system_message=

    """
    create a story about how the song was made.

    """
)
    



# Create user proxy with error handling
user_proxy = UserProxyAgent(
    name="UserProxy",
    human_input_mode="TERMINATE",
    max_consecutive_auto_reply=12, # Maximum number of consecutive auto-replies
    code_execution_config={"use_docker": False}
)

# Set up the group chat with error handling
try:
    agents = [user_proxy, Agent_1 , Agent_2 , Agent_3 ]
    groupchat = GroupChat(
            agents=agents,
            messages=[],
            max_round = 5,  # Increased from 10 to allow for more complex interactions
            speaker_selection_method="round_robin",  # Ensures ordered participation
            allow_repeat_speaker = False  # Prevents same agent from speaking twice in a row
        )
    
    manager = GroupChatManager(groupchat=groupchat, llm_config=config_list[0])

    # Start the conversation
    user_proxy.initiate_chat(
        manager,
        message=
    """
    I like taylor swift. make me something cool
    
    """
    )

except Exception as e:
    print(f"An error occurred during chat initialization: {str(e)}")
